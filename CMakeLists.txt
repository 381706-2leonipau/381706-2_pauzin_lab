cmake_minimum_required(VERSION 2.8) #Проверка версии CMake.

set(PROJECT_NAME 381706-2_pauzin_lab) #Создаем обычную локальную переменную с именем проекта
project(${PROJECT_NAME}) # Название проекта




set(vector vector) #Переменная с именем библиотеки
set(vectorlib vectorlib) #Переменная с именем библиотеки
set(vectortest vectortest)

set(queuelib queuelib)
set(queuetest queuetest)
set(queue queue)

set(matrixtest matrixtest)
set(matrixlib matrixlib)

set(stacklib stacklib)
set(stacktest stacktest)
set(stack stack)

set(multistacklib multistacklib)
set(multistacktest multistacktest)
set(multistack multistack)

set(datlink datlink)
set(datlistlib datlistlib)
set(datlist datlist)
set(datlisttest datlisttest)

set(exeptionlib exeptionlib)


set(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "Configs" FORCE) #Создается переменная CMAKE_CONFIGURATION_TYPES со значением "Debug;Release" и меткой/разделом Configs, переменная сохраниется в специальном файле доступном из всех файлов,
if(NOT CMAKE_BUILD_TYPE) # проверка имеющихся у компилятора вариантов сборки
  set(CMAKE_BUILD_TYPE Release) #Если нет то устанавливаем Release
endif()

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/vectorlib ${CMAKE_CURRENT_SOURCE_DIR}/matrixlib ${CMAKE_CURRENT_SOURCE_DIR}/stacklib ${CMAKE_CURRENT_SOURCE_DIR}/queuelib ${CMAKE_CURRENT_SOURCE_DIR}/multistacklib ${CMAKE_CURRENT_SOURCE_DIR}/datlistlib ${CMAKE_CURRENT_SOURCE_DIR}/datlink  ${CMAKE_CURRENT_SOURCE_DIR}/exeptionlib ${CMAKE_CURRENT_SOURCE_DIR}/gtest)

add_subdirectory(vector)
add_subdirectory(vectorlib)
add_subdirectory(vectortest)

add_subdirectory(matrixtest)
add_subdirectory(matrixlib)

add_subdirectory(multistacklib)
add_subdirectory(multistacktest)
add_subdirectory(multistack)

add_subdirectory(queuelib)
add_subdirectory(queuetest)
add_subdirectory(queue)

add_subdirectory(gtest) 

add_subdirectory(stacklib)
add_subdirectory(stacktest)
add_subdirectory(stack)

add_subdirectory(datlistlib)
add_subdirectory(datlink)
add_subdirectory(datlisttest)
add_subdirectory(datlist)

add_subdirectory(exeptionlib)

#file(GLOB hdrs "*.h*") #Добавляем в переменную hdrs все файлы с расширением .h
#file(GLOB srcs "*.cpp") #Добавляем в переменную srcs все файлы с расширением .h


#add_executable(${PROJECT_NAME} ${srcs} ${hdrs}) #Создаем проект с именем из переменной ${PROJECT_NAME}, в него добавляются файлы из переменных ${srcs} и ${hdrs}

#add_subdirectory(lib1) #Собираем проект в поддиректории lib1
#target_link_libraries(${PROJECT_NAME} ${MyLib1}) #Подключаем к проекту с именем ${PROJECT_NAME} библиотеку с именем ${MyLib1}